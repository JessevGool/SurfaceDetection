<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_b_m_p_loader_8cs" kind="file" language="C#">
    <compoundname>BMPLoader.cs</compoundname>
    <innerclass refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header" prot="public">B83::Image::BMP::BMPFileHeader</innerclass>
    <innerclass refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header" prot="public">B83::Image::BMP::BitmapInfoHeader</innerclass>
    <innerclass refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" prot="public">B83::Image::BMP::BMPImage</innerclass>
    <innerclass refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader" prot="public">B83::Image::BMP::BMPLoader</innerclass>
    <innerclass refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader" prot="public">B83::Image::BMP::BitStreamReader</innerclass>
    <innernamespace refid="namespace_b83">B83</innernamespace>
    <innernamespace refid="namespace_b83_1_1_image">B83::Image</innernamespace>
    <innernamespace refid="namespace_b83_1_1_image_1_1_b_m_p">B83::Image::BMP</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#region<sp/>License<sp/>and<sp/>Information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*****</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>BMPLoader.cs</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>This<sp/>is<sp/>a<sp/>simple<sp/>implementation<sp/>of<sp/>a<sp/>BMP<sp/>file<sp/>loader<sp/>for<sp/>Unity3D.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>Formats<sp/>it<sp/>should<sp/>support<sp/>are:</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/>-<sp/>1<sp/>bit<sp/>monochrome<sp/>indexed</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/>-<sp/>2-8<sp/>bit<sp/>indexed</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/>-<sp/>16<sp/>/<sp/>24<sp/>/<sp/>32<sp/>bit<sp/>color<sp/>(including<sp/>&quot;BI_BITFIELDS&quot;)</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/>-<sp/>RLE-4<sp/>and<sp/>RLE-8<sp/>support<sp/>has<sp/>been<sp/>added.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>Unless<sp/>the<sp/>type<sp/>is<sp/>&quot;BI_ALPHABITFIELDS&quot;<sp/>the<sp/>loader<sp/>does<sp/>not<sp/>interpret<sp/>alpha</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>values<sp/>by<sp/>default,<sp/>however<sp/>you<sp/>can<sp/>set<sp/>the<sp/>&quot;ReadPaletteAlpha&quot;<sp/>setting<sp/>to</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>true<sp/>to<sp/>interpret<sp/>the<sp/>4th<sp/>(usually<sp/>&quot;00&quot;)<sp/>value<sp/>as<sp/>alpha<sp/>for<sp/>indexed<sp/>images.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/>You<sp/>can<sp/>also<sp/>set<sp/>&quot;ForceAlphaReadWhenPossible&quot;<sp/>to<sp/>true<sp/>so<sp/>it<sp/>will<sp/>interpret</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/>the<sp/>&quot;left<sp/>over&quot;<sp/>bits<sp/>as<sp/>alpha<sp/>if<sp/>there<sp/>are<sp/>any.<sp/>It<sp/>will<sp/>also<sp/>force<sp/>to<sp/>read</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>alpha<sp/>from<sp/>a<sp/>palette<sp/>if<sp/>it&apos;s<sp/>an<sp/>indexed<sp/>image,<sp/>just<sp/>like<sp/>&quot;ReadPaletteAlpha&quot;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/>It&apos;s<sp/>not<sp/>tested<sp/>well<sp/>to<sp/>the<sp/>bone,<sp/>so<sp/>there<sp/>might<sp/>be<sp/>some<sp/>errors<sp/>somewhere.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/>However<sp/>I<sp/>tested<sp/>it<sp/>with<sp/>4<sp/>different<sp/>images<sp/>created<sp/>with<sp/>MS<sp/>Paint</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/>(1bit,<sp/>4bit,<sp/>8bit,<sp/>24bit)<sp/>as<sp/>those<sp/>are<sp/>the<sp/>only<sp/>formats<sp/>supported.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/>2017.02.05<sp/>-<sp/>first<sp/>version<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/>2017.03.06<sp/>-<sp/>Added<sp/>RLE4<sp/>/<sp/>RLE8<sp/>support</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Markus<sp/>GÃ¶bel<sp/>(Bunny83)</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="comment">*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING</highlight></codeline>
<codeline lineno="44"><highlight class="comment">*<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment">*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endregion<sp/>License<sp/>and<sp/>Information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.IO;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespace_b83" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_b83_1_1_image_1_1_b_m_p" kindref="compound">B83.Image.BMP</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref><sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_RGB<sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_RLE8<sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_RLE4<sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_BITFIELDS<sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_JPEG<sp/>=<sp/>0x04,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_PNG<sp/>=<sp/>0x05,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_ALPHABITFIELDS<sp/>=<sp/>0x06,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_CMYK<sp/>=<sp/>0x0B,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_CMYKRLE8<sp/>=<sp/>0x0C,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BI_CMYKRLE4<sp/>=<sp/>0x0D,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72" refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header" kindref="compound">BMPFileHeader</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ushort<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header_1af374d1eb6da1e99817a490f4600b4611" kindref="member">magic</ref>;<sp/></highlight><highlight class="comment">//<sp/>&quot;BM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header_1ac75785e841c5bf932b48053288877cbe" kindref="member">filesize</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header_1a33054284fd28720df463f9583866fedd" kindref="member">reserved</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header_1a684df693d3fa017cd7717f599ff36736" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79" refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header" kindref="compound">BitmapInfoHeader</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ab70f78d56a6c146e8025315bd4259a6c" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ushort<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a5702d6fb2d25b11950b9017d91319bb9" kindref="member">nColorPlanes</ref>;<sp/></highlight><highlight class="comment">//<sp/>always<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ushort<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref>;<sp/></highlight><highlight class="comment">//<sp/>[1,4,8,16,24,32]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a21a7ed5dcb1b30f1840d58d03b8709ba" kindref="member">rawImageSize</ref>;<sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>&quot;0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6cdfd5b4329aa2b83b08d6c6d0a926d2" kindref="member">xPPM</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a38113b095111d88025d7c2c3485cb296" kindref="member">yPPM</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1aeb8e1e774a5cefbc1da2ad0698497737" kindref="member">nPaletteColors</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a27892b397670cd886067cfe1ab5bdae1" kindref="member">nImportantColors</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1adc9e20a42e417023fe219a53b7bd13e1" kindref="member">absWidth</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Mathf.Abs(<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1af32dadf9b2da564189eb9185efbd1300" kindref="member">absHeight</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Mathf.Abs(<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header" kindref="compound">BMPFileHeader</ref><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ab2cec84349a3b7e8f4e69b3108599285" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header" kindref="compound">BitmapInfoHeader</ref><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref><sp/>=<sp/>0x00FF0000;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref><sp/>=<sp/>0x0000FF00;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref><sp/>=<sp/>0x000000FF;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref><sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Color32&gt;<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color32[]<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Texture2D<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a06812e60561ebe2109e172541162a168" kindref="member">ToTexture2D</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>tex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Texture2D(<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1adc9e20a42e417023fe219a53b7bd13e1" kindref="member">absWidth</ref>,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1af32dadf9b2da564189eb9185efbd1300" kindref="member">absHeight</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex.SetPixels32(<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex.Apply();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tex;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader" kindref="compound">BMPLoader</ref></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ushort<sp/>MAGIC<sp/>=<sp/>0x4D42;<sp/></highlight><highlight class="comment">//<sp/>&quot;BM&quot;<sp/>little<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a71eb4da27fd78ba05acc1904839718a7" kindref="member">ReadPaletteAlpha</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a6fd243aa09833bc40157514892efedf8" kindref="member">ForceAlphaReadWhenPossible</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>aFileName)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(var<sp/>file<sp/>=<sp/>File.OpenRead(aFileName))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(file);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>aData)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(var<sp/>stream<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MemoryStream(aData))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(stream);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(Stream<sp/>aData)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(var<sp/>reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BinaryReader(aData))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(reader);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a958b071392d316561f821d8de8341e16" kindref="member">LoadBMP</ref>(BinaryReader<sp/>aReader)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ReadFileHeader(aReader,<sp/>ref<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ab2cec84349a3b7e8f4e69b3108599285" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>BMP<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ReadInfoHeader(aReader,<sp/>ref<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>header<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>!=<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_RGB</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>!=<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_BITFIELDS</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>!=<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_ALPHABITFIELDS</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>!=<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_RLE4</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>!=<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_RLE8</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>image<sp/>format:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>14<sp/>+<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ab70f78d56a6c146e8025315bd4259a6c" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.BaseStream.Seek(offset,<sp/>SeekOrigin.Begin);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>&lt;<sp/>24)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref><sp/>=<sp/>0x00007C00;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref><sp/>=<sp/>0x000003E0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref><sp/>=<sp/>0x0000001F;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_BITFIELDS<sp/>||<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_ALPHABITFIELDS)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref><sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref><sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref><sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a6fd243aa09833bc40157514892efedf8" kindref="member">ForceAlphaReadWhenPossible</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref><sp/>=<sp/>GetMask(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref>)<sp/>^<sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref><sp/>|<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref><sp/>|<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_ALPHABITFIELDS)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref><sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1aeb8e1e774a5cefbc1da2ad0698497737" kindref="member">nPaletteColors</ref><sp/>&gt;<sp/>0<sp/>||<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>&lt;=<sp/>8)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref><sp/>=<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a688eaa25f6d5a1e03a357a7f5a32a8e9" kindref="member">ReadPalette</ref>(aReader,<sp/>bmp,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a71eb4da27fd78ba05acc1904839718a7" kindref="member">ReadPaletteAlpha</ref><sp/>||<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a6fd243aa09833bc40157514892efedf8" kindref="member">ForceAlphaReadWhenPossible</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.BaseStream.Seek(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ab2cec84349a3b7e8f4e69b3108599285" kindref="member">header</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header_1a684df693d3fa017cd7717f599ff36736" kindref="member">offset</ref>,<sp/>SeekOrigin.Begin);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uncompressed<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_RGB<sp/>||</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_BITFIELDS<sp/>||</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_ALPHABITFIELDS;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>==<sp/>32<sp/>&amp;&amp;<sp/>uncompressed)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read32BitImage(aReader,<sp/>bmp);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>==<sp/>24<sp/>&amp;&amp;<sp/>uncompressed)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read24BitImage(aReader,<sp/>bmp);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>==<sp/>16<sp/>&amp;&amp;<sp/>uncompressed)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read16BitImage(aReader,<sp/>bmp);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_RLE4<sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>==<sp/>4<sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadIndexedImageRLE4(aReader,<sp/>bmp);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>==<sp/><ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>.BI_RLE8<sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>==<sp/>8<sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadIndexedImageRLE8(aReader,<sp/>bmp);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uncompressed<sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref><sp/>&lt;=<sp/>8<sp/>&amp;&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadIndexedImage(aReader,<sp/>bmp);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>file<sp/>format:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1afca5bad504ee8851ba3dd478e5081778" kindref="member">compressionMethod</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>BPP:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bmp;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Read32BitImage(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color32[]<sp/>data<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32[w<sp/>*<sp/>h];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aReader.BaseStream.Position<sp/>+<sp/>w<sp/>*<sp/>h<sp/>*<sp/>4<sp/>&gt;<sp/>aReader.BaseStream.Length)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>end<sp/>of<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftR<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftG<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftB<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftA<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>v<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref>)<sp/>&gt;&gt;<sp/>shiftR);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref>)<sp/>&gt;&gt;<sp/>shiftG);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>)<sp/>&gt;&gt;<sp/>shiftB);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref>)<sp/>&gt;&gt;<sp/>shiftA);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32(r,<sp/>g,<sp/>b,<sp/>a);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Read24BitImage(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowLength<sp/>=<sp/>((24<sp/>*<sp/>w<sp/>+<sp/>31)<sp/>/<sp/>32)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>rowLength<sp/>*<sp/>h;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>rowLength<sp/>-<sp/>w<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color32[]<sp/>data<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32[w<sp/>*<sp/>h];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aReader.BaseStream.Position<sp/>+<sp/>count<sp/>&gt;<sp/>aReader.BaseStream.Length)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>end<sp/>of<sp/>file.<sp/>(Have<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(aReader.BaseStream.Position<sp/>+<sp/>count)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes,<sp/>expected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>aReader.BaseStream.Length<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftR<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftG<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftB<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>y++)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>x++)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>v<sp/>=<sp/>aReader.ReadByte()<sp/>|<sp/>((uint)aReader.ReadByte()<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((uint)aReader.ReadByte()<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref>)<sp/>&gt;&gt;<sp/>shiftR);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref>)<sp/>&gt;&gt;<sp/>shiftG);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>)<sp/>&gt;&gt;<sp/>shiftB);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x<sp/>+<sp/>y<sp/>*<sp/>w]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32(r,<sp/>g,<sp/>b,<sp/>255);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad;<sp/>i++)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Read16BitImage(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowLength<sp/>=<sp/>((16<sp/>*<sp/>w<sp/>+<sp/>31)<sp/>/<sp/>32)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>rowLength<sp/>*<sp/>h;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>rowLength<sp/>-<sp/>w<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color32[]<sp/>data<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32[w<sp/>*<sp/>h];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aReader.BaseStream.Position<sp/>+<sp/>count<sp/>&gt;<sp/>aReader.BaseStream.Length)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>end<sp/>of<sp/>file.<sp/>(Have<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(aReader.BaseStream.Position<sp/>+<sp/>count)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes,<sp/>expected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>aReader.BaseStream.Length<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftR<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftG<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftB<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftA<sp/>=<sp/>GetShiftCount(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>y++)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>x++)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>v<sp/>=<sp/>aReader.ReadByte()<sp/>|<sp/>((uint)aReader.ReadByte()<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1af94fdedc58c111ad58d22d82c43864fd" kindref="member">rMask</ref>)<sp/>&gt;&gt;<sp/>shiftR);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ac2e5d31a339e13767c62cde529ad1f60" kindref="member">gMask</ref>)<sp/>&gt;&gt;<sp/>shiftG);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1f2fa4f75d9526ea09801732abdf039" kindref="member">bMask</ref>)<sp/>&gt;&gt;<sp/>shiftB);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(byte)((v<sp/>&amp;<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a0d62c31982d699f0848cbd2f12620410" kindref="member">aMask</ref>)<sp/>&gt;&gt;<sp/>shiftA);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x<sp/>+<sp/>y<sp/>*<sp/>w]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32(r,<sp/>g,<sp/>b,<sp/>a);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad;<sp/>i++)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReadIndexedImage(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitCount<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowLength<sp/>=<sp/>((bitCount<sp/>*<sp/>w<sp/>+<sp/>31)<sp/>/<sp/>32)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>rowLength<sp/>*<sp/>h;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>rowLength<sp/>-<sp/>(w<sp/>*<sp/>bitCount<sp/>+<sp/>7)<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color32[]<sp/>data<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32[w<sp/>*<sp/>h];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aReader.BaseStream.Position<sp/>+<sp/>count<sp/>&gt;<sp/>aReader.BaseStream.Length)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>end<sp/>of<sp/>file.<sp/>(Have<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(aReader.BaseStream.Position<sp/>+<sp/>count)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes,<sp/>expected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>aReader.BaseStream.Length<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader" kindref="compound">BitStreamReader</ref><sp/>bitReader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader" kindref="compound">BitStreamReader</ref>(aReader);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>y++)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>x++)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>(int)bitReader.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1a0dbb1a076272fc32a2b0e2de5aabd180" kindref="member">ReadBits</ref>(bitCount);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>.Count)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError(</highlight><highlight class="stringliteral">&quot;Indexed<sp/>bitmap<sp/>has<sp/>indices<sp/>greater<sp/>than<sp/>it&apos;s<sp/>color<sp/>palette&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x<sp/>+<sp/>y<sp/>*<sp/>w]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[v];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitReader.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1a436c996a130b8fa6abe4193ab3b688a2" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad;<sp/>i++)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReadIndexedImageRLE4(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color32[]<sp/>data<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32[w<sp/>*<sp/>h];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(aReader.BaseStream.Position<sp/>&lt;<sp/>aReader.BaseStream.Length<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>(int)aReader.ReadByte();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(count<sp/>/<sp/>2);<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[(d<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[d<sp/>&amp;<sp/>0x0F];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((count<sp/>&amp;<sp/>0x01)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[(d<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>=<sp/>y<sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>=<sp/>y<sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(d<sp/>/<sp/>2);<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[(d2<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[d2<sp/>&amp;<sp/>0x0F];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>&amp;<sp/>0x01)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[(aReader.ReadByte()<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((d<sp/>-<sp/>1)<sp/>/<sp/>2)<sp/>&amp;<sp/>1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.ReadByte();<sp/></highlight><highlight class="comment">//<sp/>padding<sp/>(word<sp/>alignment)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReadIndexedImageRLE8(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>bmp)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1ae97b2bbaaafa6f9cd3dfac76ab93db34" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Mathf.Abs(bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a6adddf5458f2f86a0c19504e492c2a20" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color32[]<sp/>data<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1a01400fada6baddcb5606942fdce93d75" kindref="member">imageData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32[w<sp/>*<sp/>h];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(aReader.BaseStream.Position<sp/>&lt;<sp/>aReader.BaseStream.Length<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>(int)aReader.ReadByte();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>count;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[d];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>=<sp/>y<sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>=<sp/>y<sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>d;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x++<sp/>+<sp/>yOffset]<sp/>=<sp/>bmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1aa1a52a5b2764901f516914809b9fc251" kindref="member">palette</ref>[aReader.ReadByte()];</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>&amp;<sp/>0x01)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.ReadByte();<sp/></highlight><highlight class="comment">//<sp/>padding<sp/>(word<sp/>alignment)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetShiftCount(uint<sp/>mask)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/>0x01)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint<sp/>GetMask(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitCount)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bitCount;<sp/>i++)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/>0x01;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ReadFileHeader(BinaryReader<sp/>aReader,<sp/>ref<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_file_header" kindref="compound">BMPFileHeader</ref><sp/>aFileHeader)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aFileHeader.magic<sp/>=<sp/>aReader.ReadUInt16();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aFileHeader.magic<sp/>!=<sp/>MAGIC)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aFileHeader.filesize<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aFileHeader.reserved<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aFileHeader.offset<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ReadInfoHeader(BinaryReader<sp/>aReader,<sp/>ref<sp/><ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header" kindref="compound">BitmapInfoHeader</ref><sp/>aHeader)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.size<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aHeader.size<sp/>&lt;<sp/>40)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.width<sp/>=<sp/>aReader.ReadInt32();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.height<sp/>=<sp/>aReader.ReadInt32();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.nColorPlanes<sp/>=<sp/>aReader.ReadUInt16();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.nBitsPerPixel<sp/>=<sp/>aReader.ReadUInt16();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.compressionMethod<sp/>=<sp/>(<ref refid="namespace_b83_1_1_image_1_1_b_m_p_1a04addd92a5ab8a5cdbb2dc0d399bc282" kindref="member">BMPComressionMode</ref>)aReader.ReadInt32();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.rawImageSize<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.xPPM<sp/>=<sp/>aReader.ReadInt32();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.yPPM<sp/>=<sp/>aReader.ReadInt32();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.nPaletteColors<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHeader.nImportantColors<sp/>=<sp/>aReader.ReadUInt32();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>(int)aHeader.size<sp/>-<sp/>40;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(pad<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aReader.ReadBytes(pad);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;Color32&gt;<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_loader_1a688eaa25f6d5a1e03a357a7f5a32a8e9" kindref="member">ReadPalette</ref>(BinaryReader<sp/>aReader,<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image" kindref="compound">BMPImage</ref><sp/>aBmp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aReadAlpha)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>count<sp/>=<sp/>aBmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1aeb8e1e774a5cefbc1da2ad0698497737" kindref="member">nPaletteColors</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0u)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>1u<sp/>&lt;&lt;<sp/>aBmp.<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_b_m_p_image_1ad3c99d7fd20faa1de71ce3d3db53a6d9" kindref="member">info</ref>.<ref refid="struct_b83_1_1_image_1_1_b_m_p_1_1_bitmap_info_header_1a76ab3bc1e0d37a0b7c906f67f858909e" kindref="member">nBitsPerPixel</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>palette<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Color32&gt;((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)count);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>aReader.ReadByte();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!aReadAlpha)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>palette.Add(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color32(r,<sp/>g,<sp/>b,<sp/>a));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>palette;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523" refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader" kindref="compound">BitStreamReader</ref></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryReader<sp/>m_Reader;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>m_Data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_Bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1a59fadf4c560b34340a429642ad36a09a" kindref="member">BitStreamReader</ref>(BinaryReader<sp/>aReader)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Reader<sp/>=<sp/>aReader;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1a59fadf4c560b34340a429642ad36a09a" kindref="member">BitStreamReader</ref>(Stream<sp/>aStream)<sp/>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BinaryReader(aStream))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1ad5ce901116715d0e2f35234f554a316f" kindref="member">ReadBit</ref>()</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Bits<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Data<sp/>=<sp/>m_Reader.ReadByte();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Bits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)((m_Data<sp/>&gt;&gt;<sp/>--m_Bits)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ulong<sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1a0dbb1a076272fc32a2b0e2de5aabd180" kindref="member">ReadBits</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aCount)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulong<sp/>val<sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aCount<sp/>&lt;=<sp/>0<sp/>||<sp/>aCount<sp/>&gt;<sp/>32)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentOutOfRangeException(</highlight><highlight class="stringliteral">&quot;aCount&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aCount<sp/>must<sp/>be<sp/>between<sp/>1<sp/>and<sp/>32<sp/>inclusive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>aCount<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>|=<sp/>((ulong)<ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1ad5ce901116715d0e2f35234f554a316f" kindref="member">ReadBit</ref>()<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b83_1_1_image_1_1_b_m_p_1_1_bit_stream_reader_1a436c996a130b8fa6abe4193ab3b688a2" kindref="member">Flush</ref>()</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="H:/Code/Unity/SurfaceDetection/Assets/OBJImport/TextureLoader/BMPLoader.cs"/>
  </compounddef>
</doxygen>
